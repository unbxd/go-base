name: Go
on: [push, pull_request]
jobs:
  review-dependencies:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v1
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.21.0'
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v ./...
  
  analyze-codeql:
    name: "code-analysis-codeql"
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  analyze-go-linters:
    name: "code-analysis-go-linters"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: "go-vet"
        run: |
          go vet ./...
          if [ "$?" != "0" ]; then
              echo "Go vet failed"
              exit 1
          fi
      # - name: golangci-lint
      #   uses: golangci/golangci-lint-action@v3
      #   with:
      #     version: v1.54.2
      #     working-directory: .
      #     # args: -D varnamelen
